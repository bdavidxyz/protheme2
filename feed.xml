<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>David Boureau - Web development, acquisition</title>
    <description>David Boureau is a web developer based in Paris, France. He has a master in computer  science, works as a full-stack developer mostly in JavaScript and Node.js, as well as Ruby and Java.
</description>
    <link>http://bdavidxyz.com/</link>
    <atom:link href="http://bdavidxyz.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 27 Aug 2016 06:49:23 +0200</pubDate>
    <lastBuildDate>Sat, 27 Aug 2016 06:49:23 +0200</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Why I don't care about your project</title>
        <description>&lt;p&gt;&lt;em&gt;Text below is a translation of a &lt;a href=&quot;http://blog.laurentschaffner.com/pourquoi-je-me-fous-de-ton-projet/&quot;&gt;Pierre Schaffner article&lt;/a&gt;, who kindly authorizes me to publish a translated version.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Most people don’t realise &lt;strong&gt;just how many proposals&lt;/strong&gt; coming from &lt;strong&gt;small business owners&lt;/strong&gt; that I, as an independent developer, receive through my &lt;strong&gt;email account&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Obviously, I am not talking about great projects with real financing and that represent no major technical problem. No, I receive &lt;strong&gt;fabulous proposals&lt;/strong&gt; for which I am offered shares of the yet-to-be-created company that will start its official existence after the project has garnered an incredible success that completely depends on &lt;b style=&quot;text-decoration:underline&quot;&gt;your&lt;/b&gt; developing skills.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/bdavidxyz-com/image/upload/v1472270159/widcayp1_tw3mn7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you’re reading this, it’s probably because instead of taking an hour to explain all of this to you personally, I chose to send you this link.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;i-receive-offers-every-day&quot;&gt;I receive offers every day&lt;/h2&gt;

&lt;p&gt;I am not kidding when I say I receive &lt;strong&gt;so-called innovating projects&lt;/strong&gt; every day. And I know I am &lt;strong&gt;not the only one.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You think your idea is amazing and deserves my full attention, that I should spend hours working on it even though I might never receive anything in exchange for my investment? There are thousands of people like you and apart from engineering students who need to complete their training, &lt;b style=&quot;text-decoration:underline&quot;&gt;no one will take that risk.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Having an idea is good. A business plan with nice graphs is also nice. More often than not, the idea is &lt;strong&gt;good or even very good&lt;/strong&gt;. However, as soon we get to talk about concrete matters, I’m left &lt;strong&gt;on my own&lt;/strong&gt;. You think a developer can’t create a Word or Excel file and organize a project? Well you’re wrong.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/bdavidxyz-com/image/upload/v1472270164/widcayp2_zxtbgu.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In theory, I’m just a worker who generates codes, solves bugs on applications, not a thinking person (this one goes to you, business schools). However, I &lt;strong&gt;almost always&lt;/strong&gt; have to change the structure of the projects I receive, improve the &lt;strong&gt;marketing strategy&lt;/strong&gt; for a project created by others, deal with &lt;strong&gt;communication&lt;/strong&gt; on the texts published on the website, or even audit this or that, usually &lt;strong&gt;for free&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;So you say you have professional knowledge of SEO &lt;strong&gt;but you don’t know what URL-rewriting is? Or Htacc– what?&lt;/strong&gt; Let me tell you that developers &lt;b style=&quot;text-decoration:underline&quot;&gt;have real knowledge of SEO&lt;/b&gt; because they’re the ones doing the &lt;strong&gt;optimization&lt;/strong&gt; on the projects they receive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Most independent web developers also take care of communication and marketing tasks&lt;/strong&gt;. They are versatile and they can do what you do. The only difference is they usually have a &lt;b style=&quot;text-decoration:underline&quot;&gt;better understanding of the market&lt;/b&gt; because they are experienced in innovative developing and because they’ve already received an &lt;strong&gt;incredible number of bad proposals&lt;/strong&gt; before yours came along.&lt;/p&gt;

&lt;p&gt;&lt;b style=&quot;text-decoration:underline&quot;&gt;No,&lt;/b&gt; that new thing they talked about on TV last night, responsive web design, is not that new and you won’t be the first one to use it for your website that specializes in cat ads.&lt;/p&gt;

&lt;h2 id=&quot;i-have-never-seen-any-of-those-projects-turn-into-a-success-story&quot;&gt;I have never seen any of those projects turn into a success story&lt;/h2&gt;

&lt;p&gt;I have received &lt;strong&gt;dozens&lt;/strong&gt; of offers and I sometimes spent &lt;strong&gt;too much time&lt;/strong&gt; on them. Most of those projects &lt;strong&gt;never really started&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Some were badly developed because programmers ran out of patience and their source code turned into some kind &lt;strong&gt;spaghetti&lt;/strong&gt;. Yes, if you modify parts of a code, you can end up generating a flawed code. Refactorization is something you do in the beginning, when you believe in the project, &lt;strong&gt;not after you’ve already spent 6 months on the creation process.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/bdavidxyz-com/image/upload/v1472270152/widcayp3_vwjx4o.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The worst kind of business offer&lt;/strong&gt; is when you ask me to continue working on a code that was partially created by a developer who lost patience and faith. I know what to expect when you tell me about a project that is almost finished but only lacks a bit of work. On the Internet, you can find &lt;strong&gt;different technologies and programming styles&lt;/strong&gt;. A source code that has been created by a student cannot be finished by someone else unless they work on half of what’s already been created. That means &lt;strong&gt;hours&lt;/strong&gt; of observation before even starting to modify it.&lt;/p&gt;

&lt;p&gt;So forget about that, because any experienced developer will refuse to do that.&lt;/p&gt;

&lt;h2 id=&quot;we-have-projects-too-you-know&quot;&gt;We have projects too, you know&lt;/h2&gt;

&lt;p&gt;All the developers I know also have &lt;strong&gt;a project of their own&lt;/strong&gt;. We’ve worked on many projects before yours came along and we’re always working on one or two ideas &lt;strong&gt;outside working hours&lt;/strong&gt; because they’re &lt;strong&gt;a lot more interesting&lt;/strong&gt; than the industrial projects we spend our days slaving over.&lt;/p&gt;

&lt;p&gt;So when you tell a developer your project only requires “a few hours a week, outside working hours”, we couldn’t care less, because during those few hours, we will always choose projects we can control from the beginning to the end without dealing with outside intervention and for which we own 100% of shares.&lt;/p&gt;

&lt;h2 id=&quot;if-your-project-was-that-important-to-you-you-would-learn-how-to-create-it-on-your-own&quot;&gt;“If your project was that important to you, you would learn how to create it on your own”&lt;/h2&gt;

&lt;p&gt;This is what the developer &lt;strong&gt;you have an appointment with&lt;/strong&gt; is thinking, even though he &lt;strong&gt;will never tell you.&lt;/strong&gt; Programming is not an occult practice reserved only to those who studied advanced engineering. Any thirteen-year-old kid can create their website. You’re over 20 and possess &lt;strong&gt;all the cognitive skills&lt;/strong&gt; to do it too.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/bdavidxyz-com/image/upload/v1472270159/widcayp4_coadyw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But here’s the thing &lt;strong&gt;you’ll never admit to yourself&lt;/strong&gt; or others: &lt;strong&gt;you’re too lazy to learn&lt;/strong&gt;. After all, you’re the &lt;strong&gt;&lt;em&gt;marketing and communication professional&lt;/em&gt;&lt;/strong&gt;, not a technician. If you really believe in your revolutionary project, why don’t you take &lt;strong&gt;6 months&lt;/strong&gt; to get to know about the technology?&lt;/p&gt;

&lt;p&gt;Sure, the end result might not be amazing, because some people are good and others just aren’t. Also, you are likely to encounter difficulties when it comes to &lt;strong&gt;graphic design&lt;/strong&gt;. So what? You can always do most of the work and hire someone to take care of modelling and graphic design. But we both know &lt;em&gt;it’s a lot easier to ask a guy to do the developing for you and wait for him to do the job while hoping he’ll be happy with just 5 or 10% of your ridiculous shares&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/bdavidxyz-com/image/upload/v1472270164/widcayp5_vmtftw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That developer you’re in contact with knows perfectly how easy &lt;strong&gt;communication is if the application is good&lt;/strong&gt;. The key point is not the Facebook page where you’ll publish the exciting news about your project but creation itself. We know you won’t be working that hard while we’re actually &lt;strong&gt;handling everything.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/bdavidxyz-com/image/upload/v1472270166/widcayp6_ksvgqr.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So while you decide you need a &lt;em&gt;Like button&lt;/em&gt; here but not there, and then change your mind, your developer &lt;b style=&quot;text-decoration:underline&quot;&gt;knew from the start&lt;/b&gt; what to do but you chose not to listen. Or maybe your developer didn’t tell you because at the end of the day, it’s YOUR project and the 5% shares you promised means he won’t work that hard for you, I can assure you.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/bdavidxyz-com/image/upload/v1472270167/widcayp7_n8e2ps.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-alternative-that-makes-everyone-happy&quot;&gt;The alternative that makes everyone happy&lt;/h2&gt;

&lt;p&gt;The only solution that will &lt;strong&gt;satisfy all involved&lt;/strong&gt; consists in partially paying the person working with you on this project. Don’t overpay them, just pay them enough to make them interested so they’ll get involved in what they do. For a big project, you could offer 30% of the initial price plus shares, for instance. For the developer, it’s a guarantee they will receive something &lt;strong&gt;as opposed to receiving nothing even though they invested numerous hours of work in a never-ending project.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/bdavidxyz-com/image/upload/v1472270167/widcayp8_y0pw7v.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If the project turns out to be a failure&lt;/strong&gt;, the developer will think you did take a real financial risk and did not just waste their time. This will truly matter &lt;strong&gt;when you send them other offers&lt;/strong&gt;, which is important if you’re planning on investing in other projects of that kind.&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Aug 2016 00:00:00 +0200</pubDate>
        <link>http://bdavidxyz.com/blog/why-i-dont-care-about-your-project/</link>
        <guid isPermaLink="true">http://bdavidxyz.com/blog/why-i-dont-care-about-your-project/</guid>
        
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>What Bootstrap 4 looks like</title>
        <description>&lt;p&gt;Here is a giant collection of all visual elements, extracted from Bootstrap 4 docs.&lt;/p&gt;

&lt;h2 id=&quot;short-version&quot;&gt;Short version&lt;/h2&gt;

&lt;p&gt;The giant asset page is here : &lt;a href=&quot;http://bdavidxyz.github.io/yourown-bootstrap4/all.html&quot;&gt;http://bdavidxyz.github.io/yourown-bootstrap4/all.html&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;long-version&quot;&gt;Long version&lt;/h2&gt;

&lt;p&gt;I’m creating your &lt;a href=&quot;https://github.com/bdavidxyz/yourown-bootstrap4&quot;&gt;yourown-bootstrap4&lt;/a&gt;, an work-in-progress open-source project that will allow you to create your own bootstrap 4 theme “the right way” : it will give you a fast local workflow, an optimised, fast rendering once in production, a good documentation so that will focus on design, not technical details. And, finally, a way to visually check how your whole bootstrap distribution will look like : a big collection of all visual elements, extracted from Bootstrap 4 docs, that cover every corner cases.&lt;/p&gt;

&lt;p&gt;You can also think about it as an automatic style guide for your own theme.&lt;/p&gt;

&lt;p&gt;This task is done, even if the whole job is not.&lt;/p&gt;

&lt;p&gt;I presume the impatients will be happy to see what the new Bootstrap will look like.&lt;/p&gt;

&lt;p&gt;I know there is already the official Bootstrap 4 docs that show all elements, but&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;They are dispatched into multiples pages, if you want to quickly see all the assets it takes too much time,&lt;/li&gt;
  &lt;li&gt;Visual elements are blurred by &lt;em&gt;stuffs&lt;/em&gt;. Docs are here to show you everything, visual elements yes, but also code, explanations, warnings, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, here is &lt;a href=&quot;http://bdavidxyz.github.io/yourown-bootstrap4/all.html&quot;&gt;the whole page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Don’t expect a bunch of new spectacular visual components. There are some good new things of course, but the huge gap compared to Bootstrap 3 relies in the underlying code, which is now extremely easier and pleasant to use. This is the topic for another article I presume.&lt;/p&gt;

&lt;p&gt;For Bootstrap 3 the job has been done many times, see &lt;a href=&quot;http://stackoverflow.com/questions/15233089/is-there-a-giant-asset-page-of-all-bootstrap-elements-that-i-can-re-style&quot;&gt;this Stackoverflow question&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are no comments (yet) on this website, maybe the next time :)&lt;/p&gt;

&lt;p&gt;Enjoy !&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div class=&quot;u-htube u-htube--center&quot;&gt;
  &lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;What &lt;a href=&quot;https://twitter.com/hashtag/Bootstrap?src=hash&quot;&gt;#Bootstrap&lt;/a&gt; 4 looks like &lt;a href=&quot;https://t.co/WY4D2hQNNv&quot;&gt;https://t.co/WY4D2hQNNv&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/css?src=hash&quot;&gt;#css&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/webdesign?src=hash&quot;&gt;#webdesign&lt;/a&gt;&lt;/p&gt;&amp;mdash; David Boureau (@bdavidxyz) &lt;a href=&quot;https://twitter.com/bdavidxyz/status/745917309747924992&quot;&gt;June 23, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 23 Jun 2016 00:00:00 +0200</pubDate>
        <link>http://bdavidxyz.com/blog/what-bootstrap4-looks-like/</link>
        <guid isPermaLink="true">http://bdavidxyz.com/blog/what-bootstrap4-looks-like/</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>How to name css classes</title>
        <description>&lt;p&gt;Based on my favorite articles on the topic, and recent work experience, here are my 2 cents about how to properly name CSS classes.&lt;/p&gt;

&lt;h2 id=&quot;before-to-think-about-class-name-choose-a-good-name-for-html-elements&quot;&gt;0. Before to think about class name, choose a good name for HTML elements&lt;/h2&gt;

&lt;p&gt;If it’s an input, use the &lt;em&gt;input&lt;/em&gt; element.&lt;/p&gt;

&lt;p&gt;It will be far easier for the reader to scan the HTML document.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example :&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'submit'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Wooot ? --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'submit'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Ah, ok --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt; : &lt;a href=&quot;https://blog.goetter.fr/2014/11/10/bien-utiliser-un-framework-css/&quot;&gt;Raphael Goetter (french article)&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;put-the-class-name-at-the-lowest-possible-level&quot;&gt;1. Put the class name at the lowest possible level&lt;/h2&gt;

&lt;p&gt;It impacts how classes will be named. Always use the class name directly on the HTML element you want to style, even if seems to cost an extra effort.
Check the article of Chris Coyer below if it is not clear why.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example :&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;main&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mainly'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- I'd like to style this paragraph--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.mainly&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* DON'T DO THIS */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* Instead, assign a class name to p : &amp;lt;p class='paragraphly' /&amp;gt; */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.paragraphly&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt; :  &lt;a href=&quot;https://css-tricks.com/strategies-keeping-css-specificity-low/#article-header-id-3&quot;&gt;Chris Coyer&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;use-content-to-find-a-name&quot;&gt;2. Use content to find a name&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.c-header-logo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Just by reading the name, I guess this selector targets the logo of the header. */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt; : &lt;a href=&quot;http://www.phpied.com/css-coding-conventions/&quot;&gt;phpied.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;dont-use-content-if-the-picture-speaks-louder&quot;&gt;3. Don’t use content, if the picture speaks louder&lt;/h2&gt;

&lt;p&gt;Let’s say the header logo actually looks like this :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/toutuncafe/image/upload/c_scale,h_74,w_139/v1463738189/guillotine_cgxbrd.png&quot; alt=&quot;Guillotine&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then don’t call it header-logo.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.guillotine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Oh, I see what we are trying to style */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;try--like-suffix-for-better-reuse&quot;&gt;4. Try &lt;em&gt;-like&lt;/em&gt; suffix for better reuse.&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Example :&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.h3-like&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* some styling */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'h3-title'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!--I am NOT an h3 title, but since designer asked me to look the same,
      I can't complain about my classname--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt; :  &lt;a href=&quot;http://bit.ly/27GQhS6&quot;&gt;KNACSS v4&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;dont-use-camelcase&quot;&gt;5. Don’t use camelCase&lt;/h2&gt;

&lt;p&gt;It makes things harder to read.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example :&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.navToOneModuleICreated&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* versus */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.nav-to-one-module-i-created&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source :&lt;/strong&gt; &lt;a href=&quot;http://csswizardry.com/2010/12/css-camel-case-seriously-sucks/&quot;&gt;Harry Roberts&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;try-bem&quot;&gt;6. Try BEM&lt;/h2&gt;

&lt;p&gt;It’s one of the most commonly used convention by now.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It looks really weird as first glance, don’t be afraid&lt;/li&gt;
  &lt;li&gt;The entry cost is extremely low&lt;/li&gt;
  &lt;li&gt;You can try it now on any part of existing project&lt;/li&gt;
  &lt;li&gt;Long term benefits are huge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(double dash) means variation of the element.
(double underscore) means children of the element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'btn btn--warning'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- .btn--warning one of the variation of .btn--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn__text&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- .btn__text one of the child of .btn--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.btn--warning&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* Yay ! By convention, I know that code here relate to the variation &quot;warning&quot; of a button, without event looking at the HMTL code. What a relief !*/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.btn__text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* For same reason, I know that this style will target text in a button */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt; :  &lt;a href=&quot;http://blog.kaelig.fr/post/48196348743/fifty-shades-of-bem&quot;&gt;Kaelig,  fifty shades of BEM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recommended&lt;/strong&gt; :  &lt;a href=&quot;https://www.smashingmagazine.com/2016/06/battling-bem-extended-edition-common-problems-and-how-to-avoid-them/&quot;&gt;Smashing Magazine, Battling BEM&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;try-more-uglier&quot;&gt;7. Try more uglier&lt;/h2&gt;

&lt;p&gt;BEM opens new possibilities, even if their conventions looks icky at first glance.&lt;/p&gt;

&lt;p&gt;But very unusual also means that the eye can quickly grab what is actually happening and where, and for BEM, believe me, it works.&lt;/p&gt;

&lt;p&gt;Now you can try more icky convention, as long as you stick to it the whole project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.DIMENSIONS_OF_mycomponent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Ickier is almost impossible. But now it is more clear what it is about.*/&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* I used it for SASS placeholder.*/&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Don't abuse of this rule, though.*/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;use-fully-descriptive-words&quot;&gt;8. Use fully descriptive words&lt;/h2&gt;

&lt;p&gt;Apart from big classics like nav, txt, url… you should avoid any abbreviation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt; : &lt;a href=&quot;http://www.phpied.com/css-coding-conventions/&quot;&gt;phpied.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;try-to-use-only-one-letter-as-a-meaningful-prefix&quot;&gt;9. Try to use only one letter as a meaningful prefix&lt;/h2&gt;

&lt;p&gt;If it’s a visual component, start with c-
If it’s an object (like layout), start with o-
I just love this trick from Harry Roberts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'o-layout'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'o-layout-item o-grid c-button'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- When scanning HTML, the eye can quickly differentiate who does what--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt; : &lt;a href=&quot;http://csswizardry.com/2015/08/bemit-taking-the-bem-naming-convention-a-step-further/&quot;&gt;Harry Roberts&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;try--when-too-many-classes-of-a-kind&quot;&gt;10. Try [] when too many classes of a kind&lt;/h2&gt;

&lt;p&gt;This little trick allows you to scan HTML quicker.
Notice the classes .[ and .] do not exists in your CSS files, it is only here to help others to read your HTML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[ o-layout ]'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[ o-layout-item o-layout-item--first ] c-button'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- When scanning HTML, the eye can quickly differentiate who does what--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt; : &lt;a href=&quot;https://raw.githubusercontent.com/csshugs/inuit-kitchen-sink/v0.4.0/layout.html&quot;&gt;Source code of Inuit Kitchen Sink&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;use-a-js--prefix-if-it-is-only-used-by-javascript&quot;&gt;11. Use a js- prefix if it is only used by JavaScript&lt;/h2&gt;

&lt;p&gt;If Javascript needs to target an element, don’t make it rely on CSS style.
Give a dedicated prefix, like js-.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'js-click-me'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- When scanning HTML, I understand that this button has no CSS selector to design it.
       But, JavaScript will use it, probably to catch some event.--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source :&lt;/strong&gt; &lt;a href=&quot;https://leanpub.com/marionette-gentle-introduction&quot;&gt;Derick Bailey, marion
netteJS book&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;try-to-separate-parent-from-children&quot;&gt;12. Try to separate parent from children&lt;/h2&gt;

&lt;p&gt;If a class has to many responsibilities, split it into 2 separated properties.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(bad)&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- This class below will contain a mix of properties
       some concerned by a-b relationship
       some concerned by b-c relationship
       CSS file is going to be hard to read--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'child-of-a-and-parent-of-c'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;(good)&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Split into 2 classes--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'child-of-a parent-of-c'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;unsemantic-classes-should-explicitly-describe-their-properties&quot;&gt;13. Unsemantic classes should explicitly describe their properties&lt;/h2&gt;

&lt;p&gt;Most of them contain only one property, there are no value in hiding what that is.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nc&quot;&gt;.horizontal-alignment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* Don't do this. Horizontal alignment can be achieved in many ways, when scanning this selector in HTML file, we have no clue about HOW it is achieved. */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;/* Prefer this one. Using BEM, and a one-character prefix, see above */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.u-text-align--center&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;explicit-hacks-i&quot;&gt;14. Explicit hacks (I)&lt;/h2&gt;

&lt;p&gt;If you’re not happy with your CSS selector, say it to everybody.&lt;/p&gt;

&lt;p&gt;It will happen anyway, even to the best CSSuper(wo)men, so don’t be ashamed of it.&lt;/p&gt;

&lt;p&gt;In your team, find a word that will be used for such cases, document it, and stick to it all along the lifetime of your project.&lt;/p&gt;

&lt;p&gt;For us, Atom IDE automatically highlight the word “HACK” so I used it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nc&quot;&gt;.my-component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-7px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* HACK here : magic number, here to compensate gutter */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;explicit-hacks-ii&quot;&gt;15. Explicit hacks (II)&lt;/h2&gt;

&lt;p&gt;Another valuable option is to put every weird code into a dedicated file, named &lt;strong&gt;shame.css&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Again, Harry Roberts come to the rescue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Source :&lt;/strong&gt; &lt;a href=&quot;http://csswizardry.com/2013/04/shame-css/&quot;&gt;Harry Roberts&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;try-to-avoid-more-than-two-words-for-a-given-name&quot;&gt;16. Try to avoid more than two words for a given name&lt;/h2&gt;

&lt;p&gt;The name must be self-descriptive in one or two words, or code will be hard to maintain.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* OK */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.dropdown-button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* still OK */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.dropdown-button-part-one&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Hmm, still ok, but will be unredable when adding children, for ex : */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.dropdown-button-part-one__button-admin&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Yikes !!! */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;use-data-state-attribute-to-specify-state-of-your-component&quot;&gt;17. Use data-state attribute to specify state of your component&lt;/h2&gt;

&lt;p&gt;State manipulation happens very often.
It happens so frequently that give the state a dedicated attribute saves times and effort over the long term.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'c-button c-button--warning is-active'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Don't do this--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'c-button c-button--warning'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-state=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'is-active'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- That's better.
  I removed a class declaration,
  it enforces the one-state-rule,
  and for those who use Sass, it makes code cleaner.--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source :&lt;/strong&gt; Unfortunately, I can’t remember who wrote about this, but his advice was very helpful.&lt;/p&gt;

&lt;h2 id=&quot;use-has--or-is--prefix-for-the-state&quot;&gt;18. Use has- or is- prefix for the state&lt;/h2&gt;

&lt;p&gt;State manipulation happens very often. (bis)
So adhere to a strict naming convention for the state will be very helpful&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.activated&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Don't do this.  I'm not quite sure what you are talking about ?*/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.is-activated&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Yes, you're styling a state. */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source :&lt;/strong&gt; &lt;a href=&quot;https://github.com/mobify/mobify-code-style/tree/master/css/class-naming-conventions#state&quot;&gt;Mobify code style&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;use-a-dash-as-a-prefix-when-combining-multiple-state&quot;&gt;19. Use a dash as a prefix when combining multiple state&lt;/h2&gt;

&lt;p&gt;You should do everything you can to avoid state combination.
But, when it is not possible, you can use this very helpful trick from Ben Smithett.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn -color-red -size-large -shape-round&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source :&lt;/strong&gt; &lt;a href=&quot;https://www.bensmithett.com/bem-modifiers-multiple-classes-vs-extend/&quot;&gt;Ben Smithett&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;try-single-quote-instead-of-double-quote-when-declaring-selector-in-html&quot;&gt;20. Try single quote instead of double quote when declaring selector in HTML&lt;/h2&gt;

&lt;p&gt;It reduces noise a lot when reading the document.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c-button&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- BAD EXAMPLE : it uses &quot; instead of '. Not a big deal on this tiny example, but when you deal with hundreds of selector in a HTML file, single quote is a better idea.--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'c-button'&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Good !--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Source :&lt;/strong&gt; I learned it when I worked with the &lt;a href=&quot;http://www.predicsis.com/team/&quot;&gt;Predicsis team&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;dont-follow-rules&quot;&gt;21. Don’t follow rules&lt;/h2&gt;

&lt;p&gt;I tried to give you some guidelines based on my own experience, and articles that helped me the most.&lt;/p&gt;

&lt;p&gt;I doesn’t mean everything will work for you, so my best advice is :&lt;/p&gt;

&lt;p&gt;1) Try to improve your naming,
2) keep it consistent for a given project,
3) but avoid over-engineering.&lt;/p&gt;

&lt;p&gt;If you don’t feel comfortable, just skip it.&lt;/p&gt;

&lt;p&gt;Enjoy !&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Special thanks to &lt;a href=&quot;https://twitter.com/HugoGiraudel&quot;&gt;@HugoGiraudel&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/kaelig&quot;&gt;@kaelig&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/gaetanbt&quot;&gt;@gaetanbt&lt;/a&gt; for their reviews&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 18 May 2016 00:00:00 +0200</pubDate>
        <link>http://bdavidxyz.com/blog/how-to-name-css-classes/</link>
        <guid isPermaLink="true">http://bdavidxyz.com/blog/how-to-name-css-classes/</guid>
        
        
        <category>css</category>
        
      </item>
    
  </channel>
</rss>
